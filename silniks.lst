C51 COMPILER V8.12   SILNIKS                                                               06/10/2017 17:28:39 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE SILNIKS
OBJECT MODULE PLACED IN .\silniks.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\silnikizlab\silniks.c OMF2 BROWSE DEBUG PRINT(.\silniks.lst) OBJECT(.\si
                    -lniks.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          sbit in1 = P2^1;sbit in2 = P2^2;sbit en1 = P2^3;
   4          sbit in3 = P2^5;sbit in4 = P2^6;sbit en2 = P2^4;
   5          
   6          volatile unsigned char licznik1;
   7          volatile unsigned char liczbaobrotows1;
   8          
   9          
  10          volatile unsigned char stan;
  11          
  12          void stan1(){
  13   1              in1 = 1;
  14   1              in2 = 0;
  15   1              stan = 1;
  16   1      }
  17          void stan2() {
  18   1              in1 = 0;
  19   1              in2 = 1;
  20   1              stan = 2;
  21   1      }
  22          
  23          
  24          
  25          void ISR_serial(void)interrupt 4
  26          {
  27   1              if(TI==1) {TI=0;}
  28   1              if(RI==1) {
  29   2                      P1=SBUF;
  30   2                      RI=0;
  31   2              }
  32   1      }
  33          
  34          void ISR_INT0() interrupt 0 {
  35   1      
  36   1      }
  37          
  38          
  39          
  40          
  41          
  42          void ISR_INT1() interrupt 2 {
  43   1              liczbaobrotows1++;
  44   1              if(stan==1 & liczbaobrotows1==16) stan2();
  45   1              TH0=0xFF;
  46   1      }
  47          
  48          
  49          
  50          
  51          
  52          void ISR_Timer0() interrupt 1 {
  53   1              if(P1 == 50){
  54   2                      if(stan==1) {
C51 COMPILER V8.12   SILNIKS                                                               06/10/2017 17:28:39 PAGE 2   

  55   3                              licznik1++;
  56   3                              if((licznik1 % 5)==1 || (licznik1 % 5)==2) en1=1;
  57   3                              else en1=0;
  58   3                              }
  59   2      
  60   2                      if(stan==2) {
  61   3                              licznik1++;
  62   3                              if((licznik1 % 8)==1) en2=1;
  63   3                              else en2=0;
  64   3                      }
  65   2              }
  66   1              TH0=TH1=0xFF;
  67   1      }
  68          
  69          
  70          
  71          
  72          
  73          void ISR_Timer1() interrupt 3 {
  74   1              TH0=TH1=0xFF;
  75   1      }
  76          
  77          
  78          
  79          
  80          void init() {
  81   1              in1 = 1;in2 = 1;en1 = 0;
  82   1              in3 = 1;in4 = 1;en2 = 0;
  83   1              
  84   1              EX0 = 1; IT0 = 1;
  85   1              EX1 = 1; IT1 = 1;
  86   1              
  87   1      
  88   1              //tryb pracy timerow
  89   1              TMOD = 0;
  90   1              
  91   1              RCAP2H=TH2=0xFF;
  92   1              RCAP2L=TL2=0xDC;
  93   1              T2CON=0x30;             
  94   1              ES=1;
  95   1              SCON=0x50;
  96   1              TR2 = 1;
  97   1              EA = 1;
  98   1              P3_4=0;
  99   1              
 100   1              TH0 = TH1 = 0xFF;
 101   1              
 102   1              
 103   1              stan = 1;
 104   1      }
 105          
 106          
 107          
 108          
 109          
 110          
 111          
 112          
 113          
 114          void main(void) {
 115   1              
 116   1              init();
C51 COMPILER V8.12   SILNIKS                                                               06/10/2017 17:28:39 PAGE 3   

 117   1              in2 = 0;en1 = 0;
 118   1              in3 = 0;en2 = 1;
 119   1              while(1) {
 120   2              }
 121   1              
 122   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    264    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
